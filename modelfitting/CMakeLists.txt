PROJECT (modelfitting)

# Find Qt
FIND_PACKAGE(Qt4 REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)

# Include our custom cmake modules
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMake)

FIND_PACKAGE(CG)

IF (NOT CG_FOUND)
	MESSAGE(FATAL_ERROR "The NVIDIA Cg toolkit was not found.  Download it from http://developer.nvidia.com/object/cg_toolkit.html")
ENDIF (NOT CG_FOUND)

# Find Qt stuff
ADD_DEFINITIONS(${QT_DEFINITIONS})
LINK_DIRECTORIES(${QT_LIBRARY_DIR})
INCLUDE_DIRECTORIES(${QT_INCLUDES})

# Find V4D
FIND_LIBRARY(V4D_LIBRARY NAMES v4d V4D PATHS ${V4D_LIBRARY_PATHS} PATH_SUFFIXES v4d V4D vis4d vis4D)
FIND_PATH(V4D_INCLUDE_DIR NAMES vspace.hh vfield.hh PATHS ${V4D_INCLUDE_PATHS} PATH_SUFFIXES v4d V4D vis4d vis4D)

IF (NOT V4D_LIBRARY OR NOT V4D_INCLUDE_DIR)
    MESSAGE(FATAL_ERROR "libV4D not found")
ENDIF (NOT V4D_LIBRARY OR NOT V4D_INCLUDE_DIR)



# Source files
SET(MODELFITTING-SOURCES
	mesh_gl.cc
	main.cpp
	mainwindow.cpp
	glview.cpp
)

# Header files that have Q_OBJECT in
SET(MODELFITTING-MOC-HEADERS
	mainwindow.h
	glview.h
)

# UI files
SET(MODELFITTING-UI
	mainwindow.ui
)

# Resource files
SET(MODELFITTING-RESOURCES
)

QT4_WRAP_CPP(MODELFITTING-SOURCES-MOC ${MODELFITTING-MOC-HEADERS})
QT4_WRAP_UI(MODELFITTING-SOURCES-UI ${MODELFITTING-UI})
QT4_ADD_RESOURCES(MODELFITTING-SOURCES-RESOURCE ${MODELFITTING-RESOURCES})

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}
	${CMAKE_CURRENT_SOURCE_DIR}
	${V4D_INCLUDE_DIR}
	${CG_INCLUDE_PATH}
	${OPENGL_INCLUDE_DIR}
)

ADD_EXECUTABLE(modelfitting ${MODELFITTING-SOURCES} ${MODELFITTING-SOURCES-MOC} ${MODELFITTING-SOURCES-UI} ${MODELFITTING-SOURCES-RESOURCE})

TARGET_LINK_LIBRARIES(modelfitting
	${QT_QTCORE_LIBRARY}
	${QT_QTGUI_LIBRARY}
	${QT_QTOPENGL_LIBRARY}
	${V4D_LIBRARY}
	${CG_LIBRARY}
	${CG_GL_LIBRARY}
	${OPENGL_LIBRARIES}
)

INSTALL(TARGETS modelfitting
	RUNTIME DESTINATION bin)


